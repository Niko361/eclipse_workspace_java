import java.io.*;

public class Main {

	public static void main(String[] args) 
	{
		if(args.length < 2)
		{
			System.out.println("Usage: mazeSolver <filename> <search-method>.");
			System.exit(1);
		}
		
		
		MazeState Maze = readProblemFile(args[0]);
		
		

	}
	
	private static MazeState readProblemFile(String fileName) // this allow only one puzzle to be specified in a problem file 
	{
		
		try
		{
			//create file reading objects
			FileReader reader = new FileReader(fileName);
			BufferedReader buffReader = new BufferedReader(reader);
			MazeState result;
			
			String mazeDimensions = buffReader.readLine();
			//split the string by a comma
			String[] bothDimensions = mazeDimensions.replaceAll("[\\[\\]]","").split(",");
		
			//work out the size of the puzzle
			int puzzleSizeX = Integer.parseInt(bothDimensions[0]);
			int puzzleSizeY = Integer.parseInt(bothDimensions[1]);
			
			result = new MazeState(puzzleSizeX, puzzleSizeY);
			
			result.PrintMaze();
			
			
			//fill in the start state
			String startCoordinates = buffReader.readLine();
			String [] startCoordinatesArray = startCoordinates.replaceAll("[\\(\\)]","").split(",");
			
			
			//fill in the end state
			String goalStateString = buffReader.readLine();
//			goalPuzzleGrid = ParseStateString(goalStateString, goalPuzzleGrid, puzzleSize);
			
			//create the nPuzzle object...
//			result = new nPuzzle(startPuzzleGrid, goalPuzzleGrid);
						
			buffReader.close();
			return result;
		}
		catch(FileNotFoundException ex)
		{
			//The file didn't exist, show an error
			System.out.println("Error: File \"" + fileName + "\" not found.");
			System.out.println("Please check the path to the file.");
			System.exit(1);
		}
		catch(IOException ex)
		{
			//There was an IO error, show and error message
			System.out.println("Error in reading \"" + fileName + "\". Try closing it and programs that may be accessing it.");
			System.out.println("If you're accessing this file over a network, try making a local copy.");
			System.exit(1);
		}
		
		//this code should be unreachable. This statement is simply to satisfy Eclipse.
		return null;
	}

}
